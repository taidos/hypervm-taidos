#!/bin/bash
#  Copyright (C) 2000-2006 SWsoft. All rights reserved.
#
#  This program is free software; you can redistribute it and/or modify
#  it under the terms of the GNU General Public License as published by
#  the Free Software Foundation; either version 2 of the License, or
#  (at your option) any later version.
#
#  This program is distributed in the hope that it will be useful,
#  but WITHOUT ANY WARRANTY; without even the implied warranty of
#  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
#  GNU General Public License for more details.
#
#  You should have received a copy of the GNU General Public License
#  along with this program; if not, write to the Free Software
#  Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
#
#
# This script configure IP alias(es) inside VE for Debian like distros.
#
# Parameters are passed in environment variables.
# Required parameters:
#   IP_ADDR       - IP address(es) to add
#                   (several addresses should be divided by space)
# Optional parameters:
#   VE_STATE      - state of VE; could be one of:
#                     starting | stopping | running | stopped
#   IPDELALL      - deleet all ip addresse
#
ETH_DEV=eth0
LOOPBACK=lo
FAKEGATEWAY=${NETWORK_GATEWAY}
FAKEGATEWAYNET=${NETWORK_GATEWAY_NET}
CFGFILE=/etc/network/interfaces
HOSTFILE=/etc/hosts

function setup_network()
{
	echo -e "# This configuration file is auto-generated.
# WARNING: Do not edit this file, otherwise your changes will be lost.
# Please edit template $CFGFILE.template instead.
" > ${CFGFILE}

	if [ -f ${CFGFILE}.template ]; then
		cat ${CFGFILE}.template >> ${CFGFILE}
	fi
	echo -e "
# Auto generated eth0 interfaces
auto ${ETH_DEV} ${LOOPBACK}
iface ${ETH_DEV} inet static
	address ${MAIN_IP_ADDRESS}
	netmask ${MAIN_NETMASK}
	up route add -net ${FAKEGATEWAYNET} netmask ${MAIN_NETMASK} dev ${ETH_DEV}
	up route add default gw ${FAKEGATEWAY}
iface ${LOOPBACK} inet loopback
" >> ${CFGFILE}
	# Set up /etc/hosts
	if [ ! -f $HOSTFILE ]; then
		echo "127.0.0.1 localhost.localdomain localhost" > $HOSTFILE
	fi
}

function create_config()
{
	local ip=$1
	local ifnum=$2

	echo -e "auto ${ETH_DEV}:${ifnum}
iface ${ETH_DEV}:${ifnum} inet static
	address ${ip}
	netmask ${MAIN_NETMASK}" >> ${CFGFILE}.bak
}

function remove_interface()
{
	local iface=$1

	echo -e "/auto ${iface}\\>
d
wq" | ed ${CFGFILE}.bak >/dev/null 2>&1
	echo -e "/iface ${iface}\\>
.,+3d
wq" | ed ${CFGFILE}.bak >/dev/nul 2>&1
} 

function get_all_aliasid()
{
	IFNUM=-1

        IFNUMLIST=`grep -e "^auto ${ETH_DEV}:.*$" 2> /dev/null ${CFGFILE}.bak | sed "s/.*${ETH_DEV}://"`
}

function get_free_aliasid()
{
	local found=

	[ -z "${IFNUMLIST}" ] && get_all_aliasid
	while test -z ${found}; do
		let IFNUM=IFNUM+1
		echo "${IFNUMLIST}" | grep -q -E "^${IFNUM}$" 2>/dev/null || \
			found=1
	done
}

function add_ip()
{
	local ip
	local found
	local add
	local iface

	if [ "x${VE_STATE}" = "xstarting" -o  "${IPDELALL}" = "yes" ]; then
		if [ "${IPDELALL}" = "yes" ]; then
#ifdown -a --force >/dev/null 2>&1
			echo Nothing
		fi
	fi
	setup_network
	cp -f ${CFGFILE} ${CFGFILE}.bak
	for ip in ${IP_ADDR}; do
		found=
		if grep -e "\\<${ip}\\>" >/dev/null 2>&1  ${CFGFILE}.bak; then
			continue
		fi
		get_free_aliasid
		create_config ${ip} ${IFNUM}
	done
	mv -f ${CFGFILE}.bak ${CFGFILE}
	if [ "x${VE_STATE}" = "xrunning" ]; then
#/sbin/ifup -a --force 2>/dev/null
		echo Nothing
	fi
}

add_ip

exit 0
